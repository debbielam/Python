class Node():
  def __init__(self,value):
    self.value = value
    self.previous = None
    self.next = None

class LinkedList():
  def __init__(self):
    self.head = None
    self.tail = None
    self.length = 0
  
  def __str__(self):
    print('Head: ' + str(self.head)
    + '\nTail: ' + str(self.tail)
    + '\nLength: ' + str(self.length))
  
  def append(self,value):
    new_node = Node(value)
    if self.length == 0:
      self.head = new_node 
      self.tail = new_node
    else:
      new_node.previous = self.tail
      self.tail.next = new_node
      self.tail = new_node
    self.length += 1
    return self
  
  def prepend(self,value):
    new_node = Node(value)
    self.head.previous = new_node
    new_node.next = self.head
    self.head = new_node
    self.length += 1

  def insert(self,value,index):
    new_node = Node(value)
    current_node = self.head
    i = 0
    if index >= self.length:
      self.append(value)
      return
    elif index == 0:
      self.prepand(value)
      return
    else:
      while i != index:
        previous_node = current_node
        current_node = current_node.next
        i += 1
    self.length += 1
    new_node.previous = previous_node
    previous_node.next = new_node
    new_node.next = current_node
  
  def remove(self,value):
    i = 0
    previous_node = None
    current_node = self.head
    while i < self.length:
      if current_node.value == value:
        previous_node.next = current_node.next
        current_node.next.previous = previous_node
        self.length -= 1
        return
      previous_node = current_node
      current_node = current_node.next
      i += 1
    return print('Value not found!')
  
    def reverse(self):
    if self.head.next == None:
      return self.head
    first = self.head
    second = first.next
    while second:
      temp = second.next
      second.next = first
      first = second
      second = temp
    self.head.next = None
    self.head = first
    
  def print_list(self):
    list = []
    current_node = self.head
    while current_node != None:
      list.append(current_node.value)
      current_node = current_node.next
    print(list)
    

### TEST ###

l = LinkedList()
l.append(1)
l.append(8)
print(l.tail.previous.value)
l.prepend(100)
l.print_list()
l.insert(99,1)
l.insert(78,78)
l.print_list()
l.remove(32)
l.remove(1)
l.print_list()
print(l.tail.previous.value)
l.reverse()
l.print_list()
